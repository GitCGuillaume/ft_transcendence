version: "3.9"
services:
  backend:
    container_name: backend_tr
    tty: true
    build: docker/backend
    networks:
      - ft_transcendence
    expose:
      - "3000"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - APP_ID=${APP_ID}
      - APP_SECRET=${APP_SECRET}
      - VITE_APP_URI=${APP_URI}
      - AUTH_SECRET=${AUTH_SECRET}
      - CHAT_SALT=${CHAT_SALT}
      - SALT=${SALT}
      - HTTPS_KEY=${HTTPS_KEY}
      - HTTPS_CERT=${HTTPS_CERT}
    volumes:
      - ./backend:/var/www/html
      - ./frontend/public/upload_avatar:/var/www/html/upload_avatar
      - nginx:/etc/nginx/:ro
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
  frontend_tr:
    container_name: frontend_tr
    depends_on:
      - backend
    tty: true
    build: docker/frontend
    networks:
      - ft_transcendence
    expose:
      - "5173"
    volumes:
      - ./frontend:/var/www/html
      - ./frontend/public/upload_avatar:/var/www/html/public/upload_avatar
      - nginx:/etc/nginx/:ro
    environment:
      - VITE_APP_ID=${APP_ID}
      - VITE_APP_SECRET=${APP_SECRET}
      - VITE_APP_URI=${APP_URI}
      - VITE_HTTPS_KEY=${HTTPS_KEY}
      - VITE_HTTPS_CERT=${HTTPS_CERT}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
  postgres_tr:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db:/var/lib/postgresql/data/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    expose:
      - "5432"
    networks:
      - ft_transcendence

  adminer:
    container_name: adminer
    tty: true
    build: docker/adminer
    ports:
      - "9002:80"
    networks:
      - ft_transcendence
    volumes:
      - db:/var/lib/postgresql/data
    restart: on-failure
    depends_on:
      - "postgres_tr"

  nginx:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    build: docker/nginx
    networks:
      - ft_transcendence
    volumes:
      - ./nginx/reverse_proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx:/etc/nginx/:rw
    ports:
      - "4000:443"
    depends_on:
      - frontend_tr
      - backend
volumes:
  db:
  images-publics:
  nginx:

networks:
  ft_transcendence:
